"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("../index");
var chai_1 = require("chai");
require("mocha");
var epsilon = 1e-9;
describe('Quantity conversions', function () {
    it('should allow simple conversions', function () {
        var res = index_1.q(1, index_1.units.inch).convert(index_1.units.millimeter);
        chai_1.expect(res.n).to.be.closeTo(25.4, epsilon);
    });
    it('should handle disparate area multiplies', function () {
        var res = index_1.q(10, index_1.units.foot).mul(index_1.q(10, index_1.units.meter)).convert(index_1.units.sqMeter);
        chai_1.expect(res.n).to.be.closeTo(30.48, epsilon);
    });
    it('should handle offset conversions', function () {
        var res = index_1.q(25, index_1.units.degreeC).convert(index_1.units.degreeF);
        chai_1.expect(res.n).to.be.closeTo(77, epsilon);
    });
    it('should handle offset subtractions to delta', function () {
        var res = index_1.q(25, index_1.units.degreeC).sub(index_1.q(20, index_1.units.degreeC));
        chai_1.expect(res.u.nameFormat()).to.equal('delta_degreeC');
        chai_1.expect(res.n).to.be.closeTo(5, epsilon);
        chai_1.expect(res.convert(index_1.units.kelvin).n).to.be.closeTo(5, epsilon);
    });
    it('should handle offset and relative addition', function () {
        var delta5C = index_1.q(25, index_1.units.degreeC).sub(index_1.q(20, index_1.units.degreeC));
        var aPlusD = index_1.q(70, index_1.units.degreeF).add(delta5C);
        var dPlusA = delta5C.add(index_1.q(70, index_1.units.degreeF));
        chai_1.expect(aPlusD.u.nameFormat()).to.equal('degreeF');
        chai_1.expect(aPlusD.n).to.be.closeTo(79, epsilon);
        chai_1.expect(dPlusA.u.nameFormat()).to.equal('degreeF');
        chai_1.expect(dPlusA.n).to.be.closeTo(79, epsilon);
    });
    it('should disallow offset addition', function () {
        chai_1.expect(function () { return index_1.q(70, index_1.units.degreeF).add(index_1.q(5, index_1.units.degreeC)); })
            .to.throw(Error);
    });
    it('should disallow offset multiplication', function () {
        chai_1.expect(function () { return index_1.q(70, index_1.units.degreeF).mul(index_1.q(5, index_1.units.degreeC)); })
            .to.throw(Error);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVhbnRpdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi90ZXN0cy9xdWFudGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtDQUE2QztBQUM3Qyw2QkFBOEI7QUFDOUIsaUJBQWU7QUFFZixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUM7QUFFbkIsUUFBUSxDQUFDLHNCQUFzQixFQUFFO0lBQzdCLEVBQUUsQ0FBQyxpQ0FBaUMsRUFBRTtRQUNsQyxJQUFJLEdBQUcsR0FBRyxTQUFDLENBQUMsQ0FBQyxFQUFFLGFBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3JELGFBQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQy9DLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHlDQUF5QyxFQUFFO1FBQzFDLElBQUksR0FBRyxHQUFHLFNBQUMsQ0FBQyxFQUFFLEVBQUUsYUFBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFDLENBQUMsRUFBRSxFQUFFLGFBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxhQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0UsYUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDaEQsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsa0NBQWtDLEVBQUU7UUFDbkMsSUFBSSxHQUFHLEdBQUcsU0FBQyxDQUFDLEVBQUUsRUFBRSxhQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLGFBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN0RCxhQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM3QyxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyw0Q0FBNEMsRUFBRTtRQUM3QyxJQUFJLEdBQUcsR0FBRyxTQUFDLENBQUMsRUFBRSxFQUFFLGFBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBQyxDQUFDLEVBQUUsRUFBRSxhQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUN6RCxhQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDckQsYUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDeEMsYUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsYUFBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNsRSxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyw0Q0FBNEMsRUFBRTtRQUM3QyxJQUFJLE9BQU8sR0FBRyxTQUFDLENBQUMsRUFBRSxFQUFFLGFBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBQyxDQUFDLEVBQUUsRUFBRSxhQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUM3RCxJQUFJLE1BQU0sR0FBRyxTQUFDLENBQUMsRUFBRSxFQUFFLGFBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDL0MsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFDLENBQUMsRUFBRSxFQUFFLGFBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQy9DLGFBQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNsRCxhQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUM1QyxhQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDbEQsYUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDaEQsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsaUNBQWlDLEVBQUU7UUFDbEMsYUFBTSxDQUFDLGNBQU0sT0FBQSxTQUFDLENBQUMsRUFBRSxFQUFFLGFBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBQyxDQUFDLENBQUMsRUFBRSxhQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBN0MsQ0FBNkMsQ0FBQzthQUN0RCxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHVDQUF1QyxFQUFFO1FBQ3hDLGFBQU0sQ0FBQyxjQUFNLE9BQUEsU0FBQyxDQUFDLEVBQUUsRUFBRSxhQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQUMsQ0FBQyxDQUFDLEVBQUUsYUFBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQTdDLENBQTZDLENBQUM7YUFDdEQsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QixDQUFDLENBQUMsQ0FBQztBQUVQLENBQUMsQ0FBQyxDQUFDIn0=