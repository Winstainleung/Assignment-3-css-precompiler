"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("./utils");
var units_1 = require("./units");
var Q = /** @class */ (function () {
    function Q(n, u) {
        this.n = n;
        this.u = u;
    }
    Q.prototype.add = function (rhs) {
        var lhs = this;
        if (lhs.u.isDimensionless())
            lhs = new Q(lhs.n, rhs.u);
        if (rhs.u.isDimensionless())
            rhs = new Q(rhs.n, lhs.u);
        // console.log('Q.add', lhs.u, rhs.u);
        var _a = lhs.u.add(rhs.u), u = _a[0], om = _a[1], lm = _a[2], rm = _a[3];
        // console.log('Q.add', [ om, lm, rm ], this.n, this.u, rhs.n, rhs.u);
        return new Q(utils_1.applyM(om, utils_1.applyM(lm, lhs.n) + utils_1.applyM(rm, rhs.n)), u);
    };
    Q.prototype.sub = function (rhs) {
        var lhs = this;
        if (lhs.u.isDimensionless())
            lhs = new Q(lhs.n, rhs.u);
        if (rhs.u.isDimensionless())
            rhs = new Q(rhs.n, lhs.u);
        var _a = lhs.u.sub(rhs.u), u = _a[0], om = _a[1], lm = _a[2], rm = _a[3];
        // console.log('Q.sub', [ om, lm, rm ], this.n, this.u, rhs.n, rhs.u);
        return new Q(utils_1.applyM(om, utils_1.applyM(lm, lhs.n) - utils_1.applyM(rm, rhs.n)), u);
    };
    Q.prototype.mul = function (rhs) {
        var _a = this.u.mul2(rhs.u), u = _a[0], om = _a[1], lm = _a[2], rm = _a[3];
        // console.log('Q.mul', [ om, lm, rm ], this.n, this.u, rhs.n, rhs.u);
        return new Q(utils_1.applyM(om, utils_1.applyM(lm, this.n) * utils_1.applyM(rm, rhs.n)), u);
    };
    Q.prototype.div = function (rhs) {
        var _a = this.u.mul2(rhs.u.inv()), u = _a[0], om = _a[1], lm = _a[2], rm = _a[3];
        // console.log('Q.div', [ om, lm, rm ], this.n, this.u, rhs.n, rhs.u);
        return new Q(utils_1.applyM(om, utils_1.applyM(lm, this.n) / utils_1.applyM(rm, rhs.n)), u);
    };
    Q.prototype.pow = function (rhs) {
        if (!rhs.u.isDimensionless())
            throw new Error('rhs of pow must be dimensionless');
        var n = rhs.n;
        if (n === 0)
            return exports.q.one;
        var res = this;
        if (n > 0) {
            for (var i = 1; i < n; ++i)
                res = res.mul(this);
        }
        else {
            for (var i = 0; i > n; --i)
                res = res.div(this);
        }
        return res;
    };
    Q.prototype.convert = function (to) {
        // console.log('what', to);
        var _a = to.add(this.u, true), u = _a[0], om = _a[1], lm = _a[2], rm = _a[3];
        return new Q(utils_1.applyM(om, utils_1.applyM(rm, this.n)), u);
    };
    Q.prototype.setUnit = function (u) {
        return new Q(this.n, u);
    };
    Q.prototype.inspect = function () {
        var out = [this.n];
        var name = this.u.nameFormat();
        if (name)
            out.push(name);
        return '<' + out.join(' ') + '>';
    };
    return Q;
}());
exports.Q = Q;
function _q(num, unit) {
    if (num instanceof Q) {
        if (unit)
            return new Q(num.n, unit);
        return num;
    }
    return new Q(num, unit || u.one);
}
var qs = {
    zero: _q(0, units_1.units.one),
};
for (var n in units_1.units)
    qs[n] = _q(1, units_1.units[n]);
exports.q = Object.assign(_q, qs);
var u = units_1.units;
// let s1 = q.volt.div(q.one).mul(q(0.00014125));
// let o1 = q.volt.mul(q(2.2));
// let s2 = q.newton.div(q.volt).mul(q(0.00632));
// let o2 = q.newton.mul(q(-0.00343));
// let v = q(0x3a4b);
// console.log(v);
// v.u.print();
// v = v.mul(s1).add(o1);
// console.log(v);
// v.u.print();
// v = v.mul(s2).add(o2);
// console.log(v);
// v.u.print();
// v = v.convert(u.poundForce);
// console.log(v);
// v.u.print();
// console.log('HIHIHI');
// let s3 = q.deltaC.div(q.volt).mul(q(3.5));
// let o3 = q(15, u.degreeC);
// console.log(s3);
// console.log(o3);
// v = q(0x3a4b);
// console.log(v);
// v.u.print();
// v = v.mul(s1).add(o1);
// console.log(v);
// v.u.print();
// console.log(v.mul(s3));
// v = v.mul(s3).add(o3);
// console.log(v);
// v.u.print();
// let s4 = q.deltaC.div(q.volt).mul(q(10));
// let s5 = q.volt.div(q.deltaC).mul(q(1/10));
// console.log(s4);
// s4.u.print();
// console.log(q(2.5, u.volt).mul(s4));
// console.log(s5);
// s5.u.print();
// console.log(q(25, u.degreeC).mul(s5));
// console.log(q.degreeF.add(q.degreeC));
// console.log(q.degreeC.add(q.degreeF));
// console.log(q.degreeC.convert(u.degreeF));
// console.log(q.degreeF.convert(u.degreeC));
// console.log(q.degreeC.sub(q(0, u.degreeC)).convert(u.degreeF));
// console.log(q.degreeF.sub(q(0, u.degreeF)).convert(u.degreeC));
// console.log(u.deltaC.mul(u.deltaC));
// console.log(q(10, u.degreeC).mul(q(10, u.degreeC)));
// console.log(q(10, u.degreeC).mul(q(10, u.deltaC)));
// console.log(q(10, u.deltaC).mul(q(10, u.deltaC)));
// console.log(q(10, u.degreeC).mul(q(10, u.degreeC)).div(q(10, u.degreeC)));
// console.log(q(10, u.degreeC).mul(q(10, u.deltaC)).div(q(10, u.deltaC)));
// console.log(q(10, u.degreeC).mul(q(10, u.deltaC)).div(q(10, u.degreeC)));
// console.log(q(10, u.deltaC).mul(q(10, u.deltaC)).div(q(10, u.deltaC)));
// console.log(q(10, u.degreeC).mul(q(20, u.degreeC)).div(q(10, u.degreeC)));
// console.log(q(10, u.degreeC).mul(q(20, u.degreeC)).div(q(20, u.degreeC)));
// console.log(q(10, u.deltaC).mul(q(20, u.deltaC)).div(q(10, u.deltaC)));
// console.log(q(10, u.deltaC).mul(q(20, u.deltaC)).div(q(20, u.deltaC)));
// console.log(q(10, u.degreeC).mul(q(10, u.degreeF)));
// console.log(q(10, u.degreeC).mul(q(10, u.degreeF)).div(q(10, u.degreeC)));
// console.log(q(10, u.degreeC).mul(q(10, u.degreeF)).div(q(10, u.degreeF)));
// console.log(q(10, u.degreeC).mul(q(10, u.deltaF)).div(q(10, u.degreeC)));
// console.log(q(10, u.deltaC).mul(q(10, u.degreeF)).div(q(10, u.degreeF)));
// console.log(q(20, u.degreeC).mul(q(20, u.degreeC)).convert(u.kelvin.mul(u.kelvin)));
// console.log(q(10, u.degreeC).mul(q(10, u.degreeF)).convert(u.kelvin.mul(u.kelvin)));
// console.log(q(10, u.degreeC).mul(q(10, u.degreeF)).div(q(10, u.kelvin)).convert(u.degreeC));
// console.log(q(10, u.deltaC).mul(q(10, u.deltaF)).div(q(10, u.kelvin)).convert(u.deltaF));
// console.log(q(0, u.degreeF).mul(q(0, u.degreeF)).convert(u.deltaF.mul(u.degreeF)).div(q(0, u.degreeF)));
// console.log(q(0, u.degreeC).mul(q(0, u.degreeC)));
// console.log(q(1).div(q(1).div(q(0, u.degreeF)).convert(u.degreeC.inv())));
// console.log(q(10, u.degreeC.mul(u.degreeC)).add(q(10, u.deltaF.mul(u.deltaF))).div(q(10, u.deltaF)).convert(u.degreeF));
// console.log(q(1).div(q.degreeC));
// console.log(q(0, u.degreeC), q(0, u.deltaC));
// console.log(q(0, u.deltaC).add(q(2, u.degreeF)));
// console.log(q(2, u.degreeF).add(q(0, u.deltaC)));
// console.log(q(0, u.degreeC).convert(u.degreeF));
// console.log(q(0, u.degreeF).convert(u.degreeC));
// console.log(q(q(47.5, u.microstrain));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVhbnRpdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcXVhbnRpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxpQ0FBaUM7QUFDakMsaUNBQWdDO0FBRWhDO0lBQ0ksV0FDVyxDQUFTLEVBQ1QsQ0FBTztRQURQLE1BQUMsR0FBRCxDQUFDLENBQVE7UUFDVCxNQUFDLEdBQUQsQ0FBQyxDQUFNO0lBRWxCLENBQUM7SUFFRCxlQUFHLEdBQUgsVUFBSSxHQUFNO1FBQ04sSUFBSSxHQUFHLEdBQU0sSUFBSSxDQUFDO1FBQ2xCLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxlQUFlLEVBQUU7WUFDdkIsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlCLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxlQUFlLEVBQUU7WUFDdkIsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlCLHNDQUFzQztRQUNsQyxJQUFBLHFCQUFvQyxFQUFsQyxTQUFDLEVBQUUsVUFBRSxFQUFFLFVBQUUsRUFBRSxVQUFFLENBQXNCO1FBQ3pDLHNFQUFzRTtRQUN0RSxPQUFPLElBQUksQ0FBQyxDQUFDLGNBQU0sQ0FBQyxFQUFFLEVBQUUsY0FBTSxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsY0FBTSxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsZUFBRyxHQUFILFVBQUksR0FBTTtRQUNOLElBQUksR0FBRyxHQUFNLElBQUksQ0FBQztRQUNsQixJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsZUFBZSxFQUFFO1lBQ3ZCLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FB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